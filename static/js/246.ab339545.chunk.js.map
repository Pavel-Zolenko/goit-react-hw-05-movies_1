{"version":3,"file":"static/js/246.ab339545.chunk.js","mappings":"qLAEO,I,EAAMA,GAAI,wIAQJC,GAAI,8PAgBJC,GAAU,wHAQVC,GAAQ,oOAcRC,GAAS,8EAGTC,GAAS,kIAOTC,GAAU,0G,uCCvDVC,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,oD,mBCYVE,EAAY,SAAC,GAAe,IAAD,EAGU,EAHtBC,EAAY,EAAZA,MACtBC,EAAY,GACVC,GAAWC,EAAAA,EAAAA,OACjB,UAAIH,EAAMI,oBAAV,QAA0BJ,EAAMK,kBAC9BJ,GAAY,UAACD,EAAMI,oBAAP,QAAuBJ,EAAMK,gBAAgBC,MAAM,EAAG,IAKpE,OACE,+BACE,SAACjB,EAAD,UACGW,EAAMO,KAAI,SAAAP,GAAK,eACd,SAACV,EAAD,WACE,UAACM,EAAD,CAAYY,GAAE,kBAAaR,EAAMS,IAAMC,MAAO,CAAEC,KAAMT,GAAtD,WACE,SAACX,EAAD,WACE,SAACC,EAAD,CAAUoB,IAAKZ,EAAMa,YAAN,yCACuBb,EAAMa,aACxCC,EACFC,IAAG,UAAEf,EAAMgB,sBAAR,QAA0BhB,EAAMiB,KACnCC,QAAQ,YAGZ,UAACzB,EAAD,YACE,SAACC,EAAD,oBAAYM,EAAMmB,aAAlB,QAA2BnB,EAAMiB,QACjC,SAACtB,EAAD,UAAaM,WAZRD,EAAMS,GADH,OAsBvB,C,kMC/CKW,EAAW,+BACXC,EAAU,mCAEVC,EAAW,mCAAG,WAAOC,GAAP,uFACOC,EAAAA,EAAAA,IAAA,UAChBJ,EADgB,qCACqBC,EADrB,iBACqCE,IAF5C,cACVE,EADU,yBAITA,EAASC,MAJA,2CAAH,sDAOXC,EAAc,mCAAG,WAAOlB,GAAP,uFACEe,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAX,EADA,oBACcY,IAFhB,cACfI,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOdE,EAAgB,mCAAG,WAAOnB,GAAP,uFACAe,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAX,EADA,4BACsBY,EADtB,YADA,cACjBI,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOhBG,EAAa,mCAAG,WAAOpB,GAAP,uFACGe,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAX,EADA,4BACsBY,IAFzB,cACdI,EADc,yBAIbA,EAASC,MAJI,2CAAH,sDAQbI,EAAW,mCAAG,WAAOC,GAAP,uFACKP,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,kBACgCU,EADhC,yBADL,cACZN,EADY,yBAIXA,EAASC,MAJE,2CAAH,qD","sources":["components/MovieCard/MovieCard.styled.js","pages/Movies/Movies.styled.js","components/MovieCard/MovieCard.jsx","services/api.jsx"],"sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  box-shadow: none;\n  cursor: pointer;\n  transition: box-shadow 250ms linear;\n  border-radius: 5px;\n  overflow: hidden;\n\n  width: calc((100% - 6 * 16px) / 7);\n\n  :hover,\n  :focus {\n    box-shadow: 0 0 8px rgba(200, 200, 200, 0.8);\n  }\n\n`;\n\nexport const MovieThumb = styled.div`\n   border-radius: 5px;\n   overflow: hidden;\n   width: 200px;\n   height: 300px;\n\n`\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 250ms linear;\n  cursor: pointer;\n\n  &:hover,\n   :focus {\n    transform: scale(1.05);\n    box-shadow: 0 0 16px rgba(0, 0, 0, 0.6);\n  }\n\n`\nexport const MovieInfo = styled.div`\n  padding-top: 12px;  \n`\nexport const MovieName = styled.div`\n  text-transform: uppercase;\n  font-size: 20px;\n  font-weight: 500; \n  color: black;\n`\n\nexport const MovieDescr = styled.div`\n  color: #ff6b08;\n  font-size: 20px;\n  font-weight: 500;\n\n`\n  \n\n\n","import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    text-decoration: none;\n`","import {\n  MovieThumb,\n  MovieImg,\n  MovieInfo,\n  MovieName,\n  MovieDescr\n\n} from 'components/MovieCard/MovieCard.styled';\nimport PropTypes from 'prop-types';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { List, Item } from \"components/MovieCard/MovieCard.styled\";\nimport { StyledLink } from \"pages/Movies/Movies.styled\";\nimport {useLocation} from \"react-router-dom\";\n\n\nexport const MovieCard = ({ movie }) => {\n  let movieYear = '';\n  const location = useLocation();\n  if (movie.release_date ?? movie.first_air_date) {\n    movieYear = (movie.release_date ?? movie.first_air_date).slice(0, 4);\n     \n  }\n\n\n  return (\n    <>\n      <List>\n        {movie.map(movie => (\n          <Item key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{ from: location }} >\n              <MovieThumb>\n                <MovieImg src={movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n                  : imageplaceholder}\n                  alt={movie.original_title ?? movie.name}\n                  loading=\"lazy\"\n                />\n              </MovieThumb>\n              <MovieInfo>\n                <MovieName>{movie.title ?? movie.name}</MovieName>\n                <MovieDescr>{movieYear}</MovieDescr>\n              </MovieInfo>\n            </StyledLink>\n                        \n          </Item>\n        ))}\n      </List>\n    </>\n  )\n};\n\nMovieCard.propTypes = {\n  movie:  PropTypes.object.isRequired,\n}\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\nconst fetchTrends = async (page) => {\n    const response = await axios.get(\n        `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`\n    );\n    return response.data;\n};\n\nconst fetchMovieById = async (id) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n\nconst fetchMovies = async (query) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n  return response.data;\n};\n\n\n\n\n\nexport {\n  fetchTrends,\n  fetchMovieById,\n  fetchReviewsById,\n  fetchCastById,\n  fetchMovies,\n};"],"names":["List","Item","MovieThumb","MovieImg","MovieInfo","MovieName","MovieDescr","StyledLink","styled","NavLink","MovieCard","movie","movieYear","location","useLocation","release_date","first_air_date","slice","map","to","id","state","from","src","poster_path","imageplaceholder","alt","original_title","name","loading","title","MAIN_URL","API_KEY","fetchTrends","page","axios","response","data","fetchMovieById","fetchReviewsById","fetchCastById","fetchMovies","query"],"sourceRoot":""}