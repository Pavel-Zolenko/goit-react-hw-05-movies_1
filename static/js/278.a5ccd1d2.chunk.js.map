{"version":3,"file":"static/js/278.a5ccd1d2.chunk.js","mappings":"0RAQe,SAASA,IACpB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAoCP,EAAAA,EAAAA,WAAS,GAA7C,eAAOQ,EAAP,KAAmBC,EAAnB,KAEMC,EAAQJ,EAAYK,IAAI,WAG9BC,EAAAA,EAAAA,YAAU,WACDF,IAGLD,GAAc,IACdI,EAAAA,EAAAA,IAAYH,GAAOI,MAAK,SAAAC,GACpBb,GAAe,OAAIa,EAAKC,SAC3B,IACIC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACfG,QAAQZ,GAAc,IACtB,GAAC,CAACC,IAmBP,OACI,iCACI,kBAAMY,SAdO,SAAAC,GAEjB,GADAA,EAAMC,kBACDrB,EAAMsB,OACP,OAAQC,EAAAA,GAAAA,MAAY,cAGpBvB,EAAMsB,SAAWf,IACrBR,EAAe,IACfK,EAAe,CAAEoB,OAAQxB,EAAMsB,SAE9B,EAIG,WACI,kBAAOG,QAAQ,GAAf,UACI,kBAAOC,KAAK,OAAOC,KAAK,SAASC,SApB3B,SAAAR,GAClBnB,EAASmB,EAAMS,OAAOC,MACzB,OAoBW,mBAAQJ,KAAK,SAAb,uBAGHrB,IAAc,SAAC,IAAD,KAEf,SAAC,IAAD,CAAW0B,MAAOjC,KAElB,SAAC,KAAD,MAGX,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams} from \"react-router-dom\";\nimport { fetchMovies } from \"services/api\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { MovieCard } from \"components/MovieCard/MovieCard\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Movies() {\n    const [moviesFound, setMoviesFound] = useState([]);\n    const [input, setInput] = useState('');\n    const [searchQuery, setSearchQuery] = useSearchParams();\n    const [showLoader, setShowLoader] = useState(false);\n    \n    const query = searchQuery.get('search');\n        \n   \n    useEffect(() => {\n        if (!query) {\n            return;\n        }\n        setShowLoader(true);\n        fetchMovies(query).then(data => {\n            setMoviesFound([...data.results])\n        })\n            .catch(error => console.log(error))\n        .finally(setShowLoader(false))\n        },[query])\n\n    \n    const onSearchInput = event => {\n        setInput(event.target.value);\n    };\n   \n    const handleSubmit = event => {\n        event.preventDefault();\n        if (!input.trim()) {\n            return  toast.error('emptyQuery');\n           \n        }\n        if (input.trim() !== query) {\n        setMoviesFound([]);\n        setSearchQuery({ search: input.trim()});\n        }\n        }\n    \n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"\">\n                    <input type=\"text\" name='search' onChange={onSearchInput} />\n                </label>\n                <button type=\"submit\">Search</button>\n            </form>\n            \n            {showLoader && <Loader />}\n            \n            <MovieCard movie={moviesFound} />\n             \n            <ToastContainer />\n        </>\n    )\n}"],"names":["Movies","useState","moviesFound","setMoviesFound","input","setInput","useSearchParams","searchQuery","setSearchQuery","showLoader","setShowLoader","query","get","useEffect","fetchMovies","then","data","results","catch","error","console","log","finally","onSubmit","event","preventDefault","trim","toast","search","htmlFor","type","name","onChange","target","value","movie"],"sourceRoot":""}