{"version":3,"file":"static/js/958.eeee4bff.chunk.js","mappings":"oQAEaA,EAAeC,EAAAA,EAAAA,IAAH,+IAQZC,EAAmBD,EAAAA,EAAAA,IAAH,2D,kBCNvBE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,+OAeHI,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECjBc,SAASE,IAAgB,IAAD,IACrC,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAASC,EAAAA,EAAAA,MAGTC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAW7C,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeP,EAAOQ,IAAIC,MAAK,SAAAC,GAC7BX,EAAaW,EACd,GACF,GAAE,CAACV,EAAOQ,MAMT,4BACE,SAAChB,EAAD,CAAWC,GAAIS,EAAf,4BACCJ,IACC,iCACA,UAACX,EAAD,YACA,0BACE,gBAAKwB,MAAM,MACTC,IACEd,EAAUe,YAAV,0CACuCf,EAAUe,aAC7CC,EAENC,IAAG,UAAKjB,EAAUkB,OAASlB,EAAUmB,WAEzC,4BACE,wBAAKnB,EAAUkB,OAASlB,EAAUmB,QAClC,uCAAiBC,KAAKC,MAA+B,GAAxBrB,EAAUsB,cAAvC,QACF,sCACE,uBAAItB,EAAUuB,YAChB,oCACA,uBAAIvB,EAAUwB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMP,IAAV,IAAgBQ,KAAK,eAGjD,UAACpC,EAAD,YACE,mDACA,2BACJ,yBACE,SAAC,KAAD,CAAMI,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGE,SAAC,EAAAiC,SAAD,WACE,SAAC,KAAD,cAYb,C,+LCvEKC,EAAW,+BACXC,EAAU,mCAEVC,EAAW,mCAAG,WAAOC,GAAP,uFACOC,EAAAA,EAAAA,IAAA,UAChBJ,EADgB,qCACqBC,EADrB,iBACqCE,IAF5C,cACVE,EADU,yBAITA,EAAStB,MAJA,2CAAH,sDAOXH,EAAc,mCAAG,WAAOC,GAAP,uFACEuB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAnB,EADA,oBACcoB,IAFhB,cACfI,EADe,yBAIdA,EAAStB,MAJK,2CAAH,sDAOduB,EAAgB,mCAAG,WAAOzB,GAAP,uFACAuB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAnB,EADA,4BACsBoB,EADtB,YADA,cACjBI,EADiB,yBAIhBA,EAAStB,MAJO,2CAAH,sDAOhBwB,EAAa,mCAAG,WAAO1B,GAAP,uFACGuB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAnB,EADA,4BACsBoB,IAFzB,cACdI,EADc,yBAIbA,EAAStB,MAJI,2CAAH,sDAQbyB,EAAW,mCAAG,WAAOC,GAAP,uFACKL,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,kBACgCQ,EADhC,yBADL,cACZJ,EADY,yBAIXA,EAAStB,MAJE,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetalis.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const DetailsWrapp = styled.div`\n   display: flex;\n   gap: 30px;\n   padding-top: 15px;\n   padding-bottom: 15px;\n   border-bottom: 1px solid black;\n`;\n\nexport const DetailsWrappInfo = styled.div`\nborder-bottom: 1px solid black;\n\n`","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from '@emotion/styled';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: #df4d4d;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { Suspense } from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { fetchMovieById } from \"services/api\";\nimport imageplaceholder from \"images/noposter.jpg\";\nimport { DetailsWrapp, DetailsWrappInfo } from \"./MovieDetails.styled\";\nimport { BackLink } from \"components/BackLink/BackLink\";\n\n\nexport default function MovieDetails() {\n  const [movieItem, setMovieItem] = useState(null);\n  const params = useParams();\n  \n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/movies\";\n \n  \n  useEffect(() => {\n    fetchMovieById(params.id).then(data => {\n      setMovieItem(data)\n    })\n  }, [params.id]);\n    \n  \n\n  return (\n    \n    <div>\n      <BackLink  to={backLinkHref}>Back to movies</BackLink>\n      {movieItem && (\n        <>\n        <DetailsWrapp>\n        <div>\n          <img width=\"200\"\n            src={\n              movieItem.poster_path\n                ? `https://image.tmdb.org/t/p/w200/${movieItem.poster_path}`\n                : imageplaceholder\n            }\n            alt={`${movieItem.title || movieItem.name}`} />\n        </div>\n        <div>\n          <h1>{movieItem.title || movieItem.name }</h1>\n          <p>User score:{  Math.round((movieItem.vote_average)*10)}%</p>\n        <h2>Overview</h2>\n          <p>{movieItem.overview }</p>\n        <h3>Genres</h3>\n        <p>{movieItem.genres.map(genre => genre.name).join(', ')}</p>  \n        </div>\n        </DetailsWrapp>\n          <DetailsWrappInfo>\n            <p>Additional information</p>\n            <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"Reviews\">reviews</Link>\n        </li>\n            </ul>\n            <Suspense>\n              <Outlet />\n            </Suspense>\n      \n          </DetailsWrappInfo>\n          </>\n      )}\n      </div>\n      \n   \n        \n\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\nconst fetchTrends = async (page) => {\n    const response = await axios.get(\n        `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`\n    );\n    return response.data;\n};\n\nconst fetchMovieById = async (id) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n\nconst fetchMovies = async (query) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n  return response.data;\n};\n\n\n\n\n\nexport {\n  fetchTrends,\n  fetchMovieById,\n  fetchReviewsById,\n  fetchCastById,\n  fetchMovies,\n};"],"names":["DetailsWrapp","styled","DetailsWrappInfo","StyledLink","Link","BackLink","to","children","size","MovieDetails","useState","movieItem","setMovieItem","params","useParams","backLinkHref","useLocation","state","from","useEffect","fetchMovieById","id","then","data","width","src","poster_path","imageplaceholder","alt","title","name","Math","round","vote_average","overview","genres","map","genre","join","Suspense","MAIN_URL","API_KEY","fetchTrends","page","axios","response","fetchReviewsById","fetchCastById","fetchMovies","query"],"sourceRoot":""}